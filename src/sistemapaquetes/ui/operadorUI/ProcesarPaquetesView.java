/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sistemapaquetes.ui.operadorUI;

import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JTable;
import javax.swing.JTextField;
import org.jdesktop.observablecollections.ObservableList;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;
import sistemapaquetes.model.ListasObservables;
import sistemapaquetes.model.PaqueteInCola;

/**
 *
 * @author asael
 */
public class ProcesarPaquetesView extends javax.swing.JInternalFrame {
    
    private ListasObservables observableList;
    private ObservableList<String> nameRListObservable;
    private ObservableList<String> namePCListObservable;
    private ObservableList<PaqueteInCola> colaPCObservableList;

    /**
     * Creates new form ProcesarPaquetesView
     */
    public ProcesarPaquetesView() {
        observableList = ListasObservables.getInstance();
        nameRListObservable = observableList.getNameRutasObservableList();
        namePCListObservable = observableList.getNamePCObservableList();
        colaPCObservableList = observableList.getColaPCObservableList();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        cbEscogerPC = new javax.swing.JComboBox<>();
        btnProcesar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtHoras = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblColaPC = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        cbRuta = new javax.swing.JComboBox<>();
        btnCerrar = new javax.swing.JButton();

        setTitle("Procesar Paquetes");

        AutoCompleteDecorator.decorate(cbEscogerPC);
        cbEscogerPC.setEditable(true);

        org.jdesktop.beansbinding.ELProperty eLProperty = org.jdesktop.beansbinding.ELProperty.create("${namePCListObservable}");
        org.jdesktop.swingbinding.JComboBoxBinding jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, cbEscogerPC);
        bindingGroup.addBinding(jComboBoxBinding);

        btnProcesar.setText("Procesar");
        btnProcesar.setEnabled(false);

        jLabel1.setText("Horas en punto de control");

        txtHoras.setEnabled(false);

        jLabel2.setText("Punto de control");

        eLProperty = org.jdesktop.beansbinding.ELProperty.create("${colaPCObservableList}");
        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, tblColaPC);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idPaquete}"));
        columnBinding.setColumnName("Id");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nombrePaquete}"));
        columnBinding.setColumnName("Paquete");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nombrePuntoControl}"));
        columnBinding.setColumnName("Punto Control");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nombreRuta}"));
        columnBinding.setColumnName("Ruta");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${tarifaOperacion}"));
        columnBinding.setColumnName("Tarifa Op.");
        columnBinding.setColumnClass(Float.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane1.setViewportView(tblColaPC);

        jLabel3.setText("Ruta");

        AutoCompleteDecorator.decorate(cbRuta);
        cbRuta.setEditable(true);

        eLProperty = org.jdesktop.beansbinding.ELProperty.create("${nameRListObservable}");
        jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, cbRuta);
        bindingGroup.addBinding(jComboBoxBinding);

        btnCerrar.setText("Cerrar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbRuta, 0, 160, Short.MAX_VALUE)
                            .addComponent(cbEscogerPC, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtHoras, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnProcesar)
                        .addGap(18, 18, 18)
                        .addComponent(btnCerrar)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cbRuta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbEscogerPC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtHoras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnProcesar)
                    .addComponent(btnCerrar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnProcesar;
    private javax.swing.JComboBox<String> cbEscogerPC;
    private javax.swing.JComboBox<String> cbRuta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblColaPC;
    private javax.swing.JTextField txtHoras;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    @Override
    public void setVisible(boolean visibility){
        if (visibility) {
            observableList.reloadListNameRutas();
        }
        super.setVisible(visibility);
    }
    
    public JButton getBtnProcesar() {
        return btnProcesar;
    }

    public JButton getBtnCerrar() {
        return btnCerrar;
    }

    public JComboBox<String> getCbEscogerPC() {
        return cbEscogerPC;
    }

    public JComboBox<String> getCbRuta() {
        return cbRuta;
    }

    public JTable getTblColaPC() {
        return tblColaPC;
    }

    public JTextField getTxtHoras() {
        return txtHoras;
    }

    public ObservableList<String> getNameRListObservable() {
        return nameRListObservable;
    }

    public void setNameRListObservable(ObservableList<String> nameRListObservable) {
        this.nameRListObservable = nameRListObservable;
    }

    public ObservableList<String> getNamePCListObservable() {
        return namePCListObservable;
    }

    public void setNamePCListObservable(ObservableList<String> namePCListObservable) {
        this.namePCListObservable = namePCListObservable;
    }

    public ObservableList<PaqueteInCola> getColaPCObservableList() {
        return colaPCObservableList;
    }

    public void setColaPCObservableList(ObservableList<PaqueteInCola> colaPCObservableList) {
        this.colaPCObservableList = colaPCObservableList;
    }
}
